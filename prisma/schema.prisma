generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  estimates Estimate[]
}

model Estimate {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  vehicle     Vehicle?
  photos      Photo[]
  lineItems   LineItem[]
  supplements Supplement[]
}

model Vehicle {
  id         String   @id @default(cuid())
  estimateId String   @unique
  estimate   Estimate @relation(fields: [estimateId], references: [id])
  make       String
  model      String
  year       Int
  vin        String?
}

model Photo {
  id         String   @id @default(cuid())
  estimateId String
  estimate   Estimate @relation(fields: [estimateId], references: [id])
  url        String
  createdAt  DateTime @default(now())
}

model LineItem {
  id         String   @id @default(cuid())
  estimateId String
  estimate   Estimate @relation(fields: [estimateId], references: [id])
  description String
  quantity   Int
  unitPrice  Float
  totalPrice Float
}

model Supplement {
  id         String   @id @default(cuid())
  estimateId String
  estimate   Estimate @relation(fields: [estimateId], references: [id])
  description String
  amount     Float
  createdAt  DateTime @default(now())
}

model Company {
  id              String    @id @default(cuid())
  name            String
  type            CompanyType
  subscriptionTier String    @default("FREE")
  users           User[]
  estimates       Estimate[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model VehicleInfo {
  id         String   @id @default(cuid())
  make       String
  model      String
  year       Int
  vin        String
  estimateId String   @unique
  estimate   Estimate @relation(fields: [estimateId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ComplianceCheck {
  id         String   @id @default(cuid())
  score      Float
  issues     Json?
  estimateId String   @unique
  estimate   Estimate @relation(fields: [estimateId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ComplianceRule {
  id          String   @id @default(cuid())
  name        String
  description String
  category    String
  severity    Severity
  parameters  Json     // Rule-specific parameters
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum UserRole {
  ADMIN
  MANAGER
  ESTIMATOR
  AUDITOR
}

enum CompanyType {
  BODY_SHOP
  INSURANCE
  FLEET
  INDEPENDENT
}

enum EstimateStatus {
  UPLOADED
  PROCESSING
  COMPLETED
  FAILED
}

enum Severity {
  INFO
  WARNING
  ERROR
} 